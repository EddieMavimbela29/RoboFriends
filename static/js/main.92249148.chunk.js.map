{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/Cardlist.js","components/Scroll.js","components/ErrorBoundry.js","containers/Home.jsx","redux/robotRedux.js","redux/searchRedux.js","redux/store.js","index.js"],"names":["SearchBox","searchField","searchChange","console","log","className","type","onChange","placeholder","Card","name","email","id","alt","src","CardList","robots","map","user","i","key","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","Home","useState","setRobots","setSearchField","useSelector","robot","isFetching","useEffect","a","axios","get","res","data","getRobots","filteredRobots","filter","toLowerCase","includes","e","target","value","ErrorBoundry","robotSlice","createSlice","initialState","reducers","roboStart","roboSuccess","action","payload","roboFailure","actions","searchFieldSlice","change_searchFeild","logger","createLogger","rootReducer","combineReducers","robotReducer","searchFieldReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92249148.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange }) => {\r\n    console.log('searchbox')\r\n    return(\r\n       \r\n    <div className='pa2'>\r\n       <input \r\n          className='pa3 ba b--green bg-lightest-blue'\r\n          type='search'\r\n          onChange={searchChange}\r\n          placeholder='search for robots...'\r\n       /> \r\n     </div>\r\n\r\n    );\r\n}\r\nexport default SearchBox;  ","import React from 'react';\r\n\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n \r\n    return(\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow tc\">\r\n        <img alt='pht' src={`https://robohash.org/${id}`} />\r\n        <div>\r\n            <h2> { name } </h2>\r\n            <p> { email }</p>\r\n        </div>\r\n           \r\n     </div>\r\n\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  console.log('cardlist')\r\n    return(\r\n        \r\n    <div>\r\n      \r\n        {\r\n          robots.map((user, i) => {\r\n              return (\r\n                   <Card \r\n                     key={i}  \r\n                     id={robots[i].id} \r\n                     name={robots[i].name} \r\n                     email={robots[i].email} \r\n                   />\r\n                   )\r\n            })\r\n        } \r\n     </div>\r\n\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    \r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor (props){\r\n        super(props)\r\n        this.state = {hasError: false}\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Something went wrong</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React,{ useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/Cardlist';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport '../containers/App.css'\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Home = () => {\r\n   const [robots, setRobots] = useState([]);\r\n   const [searchField, setSearchField] = useState(\"\");\r\n   const { isFetching, error } = useSelector((state) => state.robot);\r\n\r\n   useEffect(()=> {\r\n     const getRobots = async () => {\r\n         try {\r\n           const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n           setRobots(res.data)\r\n         } catch (e) {}\r\n     }\r\n     getRobots();\r\n   },[]);\r\n\r\n   const onSearchChange = (e) => {\r\n     setSearchField(e.target.value);\r\n   }\r\n\r\n   const filteredRobots = robots.filter(robot => {\r\n     return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n   });\r\n\r\n  return(\r\n    <div className='tc'>\r\n       <h1 className='f1'>RoboFriends</h1>\r\n       <SearchBox searchChange={onSearchChange}/>\r\n       <Scroll>\r\n         { isFetching && <h1>Loading</h1>}\r\n          { error && <h1>server shutdown</h1>}\r\n           <ErrorBoundry>\r\n             <CardList robots={filteredRobots} />\r\n           </ErrorBoundry>\r\n       </Scroll>\r\n     </div>\r\n   );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Home;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst robotSlice = createSlice({\r\n  name: \"robot\",\r\n  initialState: {\r\n    robots: [],\r\n    isFetching: false,\r\n    error: false\r\n  },\r\n  reducers: {\r\n    roboStart: (state) => {\r\n      state.isFetching = true;\r\n    },\r\n    roboSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.robots = action.payload;\r\n    },\r\n    roboFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { roboStart, roboFailure, roboSuccess } = robotSlice.actions;\r\nexport default robotSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst searchFieldSlice = createSlice({\r\n  name: \"robot\",\r\n  initialState: {\r\n    searchField: \"\"\r\n  },\r\n  reducers: {\r\n    change_searchFeild: (state, action) => {\r\n      state.searchField = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { change_searchFeild } = searchFieldSlice.actions;\r\nexport default searchFieldSlice.reducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"@reduxjs/toolkit\";\r\nimport robotReducer from \"./robotRedux\";\r\nimport searchFieldReducer from \"./searchRedux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nconst logger = createLogger()\r\n\r\nconst rootReducer = combineReducers({ robot: robotReducer, searchField: searchFieldReducer });\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport {Provider} from 'react-redux';\nimport App from './containers/Home';\nimport './index.css'\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store} >\n   <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}